- name: Installing Shipping componenets
  hosts: shipping 
  become: yes 
  vars:
    mysql_password: RoboShop@1
  tasks:
    - name: Install Maven 
      ansible.builtin.dnf:
        name: maven 
        state: present

    - name: Add roboshop User
      ansible.builtin.user:
        name: roboshop

    - name: Recursively remove app directory
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download shipping.zip
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp 

    - name: Unzip shipping.zip
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app 
        remote_src: yes 

    - name: Install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app 

    - name: rename jar file 
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args: 
        chdir: /app

    - name: copy shipping.service
      ansible.builtin.copy: 
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: daemon reload
      ansible.builtin.systemd_service: 
        daemon_reload: true

    - name: Enable and Start the shipping
      ansible.builtin.service:
        name: shipping
        enabled: yes
        state: restarted

    - name: Install mysql client
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: check cities schema exist or not
      ansible.builtin.command: mysql -h mysql.daws76s.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: print output
      ansible.builtin.debug:
      msg: "schema output: {{schema}}"

    - name: load cities schema 
      ansible.builtin.shell: mysql -h mysql.learndevops.space -uroot -p{{mysql_password}} < /app/schema/shipping.sql
      when: schema.stdout != "1"

    - name: Enable and retart the shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
